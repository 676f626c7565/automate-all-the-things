name: deploy-backend

trigger: none

resources:
  repositories:
  - repository: automate-all-the-things # The name used to reference this repository in the checkout step
    type: github
    endpoint: tferrari92 # Name of the service connection
    name: tferrari92/automate-all-the-things

pool:
  vmImage: 'ubuntu-latest'
  # Uncomment the three lines below and comment the previous line if you will use a self-hosted agent
  # name: lenovo # Agent Pool Name
  # demands:
  #   - agent.name -equals lenovo-agent # Agent Name

steps:
- task: TerraformInstaller@0
  displayName: Install terraform
  inputs:
    terraformVersion: '1.4.6'

- checkout: automate-all-the-things

- script: ls
  displayName: 'Verify checkout'

- task: TerraformCLI@0
  displayName: 'Terraform init'
  inputs:
    command: init
    workingDirectory: './terraform/backend/'
    providerServiceAws: 'aws' # This depends on the AWS Service Connection included with the AWS Toolkit. It uses a sevice connection created on the project called 'aws' so we dont't have to include the access_key and secret_key values.
    providerAwsRegion: us-east-2 # Required

- task: TerraformCLI@0
  displayName: 'Terraform plan'
  inputs:
    command: plan
    workingDirectory: './terraform/backend/'
    providerServiceAws: 'aws' # This depends on the AWS Service Connection included with the AWS Toolkit. It uses a sevice connection created on the project called 'aws' so we dont't have to include the access_key and secret_key values.
    providerAwsRegion: us-east-2 # Required

- task: TerraformCLI@0
  displayName: 'Terraform apply'
  inputs:
    command: apply
    workingDirectory: './terraform/backend/'
    providerServiceAws: 'aws' # This depends on the AWS Service Connection included with the AWS Toolkit. It uses a sevice connection created on the project called 'aws' so we dont't have to include the access_key and secret_key values.
    providerAwsRegion: us-east-2 # Required

- task: PublishBuildArtifacts@1
  displayName: 'Save terraform state file'
  inputs:
    PathtoPublish: '$(Pipeline.Workspace)/s/terraform/backend/terraform.tfstate'
    ArtifactName: 'TerraformState'
    publishLocation: 'Container'
    # condition: always()

