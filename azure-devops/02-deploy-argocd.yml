name: deploy-argocd

trigger: none

resources:
  repositories:
  - repository: automate-all-the-things # The name used to reference this repository in the checkout step
    type: github
    endpoint: tferrari92 # Name of the service connection # AATT_GITHUB_USERNAME # This value was modified by the initial-setup python script
    name: tferrari92/automate-all-the-things # AATT_GITHUB_USERNAME
  # pipelines:
  # - pipeline: deploy-eks # any arbitrary name
  #   source: deploy-eks   # name of the pipeline shown on azure UI portal
  #   # source: "AATT_GITHUB_USERNAME.automate-all-the-things (2)"   # Name of the pipeline that needs to succeed for this pipeline to run # AATT_GITHUB_USERNAME
  #   trigger:
  #   branches:
  #     include:
  #       - main

pool:
  vmImage: 'ubuntu-latest' 
  # If you are using a self-hosted agent, comment out the previous line and uncomment the following three
  # name: <agent-pool-name> # Insert here the name of the agent pool you created
  # demands:
  #   - agent.name -equals <agent-name> # Insert here the name of the agent you created

steps:
- task: HelmInstaller@0
  inputs:
    displayName: Install helm
    helmVersion: '3.11.2'
    installKubectl: true

- task: AWSCLI@1
  inputs:
    awsCredentials: 'aws'
    regionName: 'us-east-2'
    awsCommand: 'eks update-kubeconfig'
    awsArguments: '--name cafe-cluster --region us-east-2' # This value was modified by the initial-setup python script

- script: kubectl config view --minify
  displayName: 'Verify KubeConfig'


- script: |
    helm repo add dandydev https://dandydeveloper.github.io/charts
    helm dependency build .
  workingDirectory: './helm/argocd/'
  displayName: 'Build dependencies'

- task: HelmDeploy@0
  displayName: Deploy argocd
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceConnection: 'k8s'
    command: 'install'
    chartType: 'FilePath'
    chartPath: 'helm/argocd'
    releaseName: 'argocd'


